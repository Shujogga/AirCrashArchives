const fs = require('fs');
const path = require('path');

// 🔍 Recursively collect all .html files
function findHTML(dir, htmlFiles = []) {
  for (const item of fs.readdirSync(dir)) {
    const full = path.join(dir, item);
    const stats = fs.statSync(full);
    if (stats.isDirectory()) {
      findHTML(full, htmlFiles);
    } else if (full.endsWith('.html')) {
      htmlFiles.push(full);
    }
  }
  return htmlFiles;
}

// 🛠 Apply fixes to each HTML file
function patchFile(file) {
  let content = fs.readFileSync(file, 'utf8');
  let original = content;

  // 🚫 Remove hardcoded <nav>…</nav>
  content = content.replace(/<nav class="main-nav">[\s\S]*?<\/nav>/gi, '');

  // ✅ Inject <div id="nav-placeholder"> if not present
  if (!content.includes('id="nav-placeholder"')) {
    content = content.replace(/<body[^>]*>/i, match => `${match}\n  <div id="nav-placeholder"></div>`);
  }

  // ✅ Inject fetch nav.js script if not present
  const navScript = `fetch('/navigation/nav.html')`;
  if (!content.includes(navScript)) {
    content = content.replace(/<\/head>/i, match => `
  <script>
    fetch('/navigation/nav.html')
      .then(res => res.text())
      .then(html => {
        document.getElementById('nav-placeholder').innerHTML = html;
      });
  </script>
${match}`);
  }

  if (content !== original) {
    fs.writeFileSync(file, content, 'utf8');
    console.log(`✅ Updated: ${file}`);
  }
}

console.log('🔧 Injecting nav.html into pages...');
findHTML(__dirname).forEach(patchFile);
console.log('🎉 All HTML files patched.');